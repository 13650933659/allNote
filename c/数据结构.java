



1、数据结构
	1、逻辑结构: 指人想象的数字之间的关系
		1、分类
			1、集合结构（所有数据都属于一个总体）
			2、线性结构(所有的数字可以用一条直线连接起来)
			3、树形结构(任何数字只有一个前导数字，可以有多个后续数字)
			4、网状结构(数字之间有多对多的交叉结构，没有反向性)
		2、具体的
			1、栈的实现(后进先出)
				1、数组的实现
					1、 int stack[10]; int top(栈顶位置);	// 使用这2个管理
				2、链表的实现
					1、 push 的时候就调用 add_head，peak 就调用 get_head，pop 也是对应 first
			2、队列的实现(先进先出)
				1、数组的实现
					1、 int front(第一个), rear(最后一个), num(队列的个数用于循环存储提高空间利用率);	// 使用这3个管理
				2、链表的实现
					1、 push 的时候就调用 add_tail，peak 就调用 get_head，pop 也是对应 first
			3、树
				1、二叉树： 有一个根节点，每个节点有两个指针
					1、前序遍历(先处理根节点，然后是左子树和右子树)
					2、中序遍历(先处理左子树，然后是根节点，最后右子树)
					3、后序遍历(先处理左子树和右子树，然后是根节点)
	2、物理结构: 计算机内部实际的数字之间的关系
		1、顺序结构(数据存放在一段连续的内存空间中)
			1、优点
				可以使用编号访问任何一个数字，访问任何数字时间相同
			2、缺点
				插入删除慢，空间利用效率低
		2、链式结构(数据存放在彼此独立的空间中，每个空间叫做一个节点，没有节点都一个指针来记录下一个节点的地址)
			1、链表类型
				1、单向链表：每一个节点只有一个指针
				2、双向链表：每一个节点中有两个指针
				3、循环链表，没头没位的，形成环状
			2、缺点
				1、随机访问不方便
			3、优点
				1、插入删除快
				2、空间利用率高
	


2、算法(掌握以下算法，请看03 上下午)
	1、排序
		1、冒泡排序算法
		2、选择排序是冒泡的一种优化，因为冒泡赋值太多
		3、插入排序
		4、快速排序(背起来)
		5、归并排序(背起来)
	2、查找
		1、二分查找


















