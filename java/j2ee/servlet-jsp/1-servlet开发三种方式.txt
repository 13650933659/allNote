一、Servlet的开发三种方法
	1、实现Servlet接口：实现5个方法：
		（1）public void init(ServletConfig p){try}
		（2）public ServletConfig getServletConfig(){}
		（3）public void service(ServletRequst req,ServletRespose res){try}
		（4）public String getServletInfo(){}
		（5）public void destroy(){}

	2、实现五个方法有点麻烦所以就有继承GenericServlet抽象类，其实他也实现了servlet接口
		（1）public void service(ServletRequst request,ServletRespose respose){try}《一个就可以：业务》

	3、继承HttpServlet：其实HttpServlet继承了GenericServlet也实现了servlet功能更强大（最主要是前两中没有考虑只针对http协议）,所以这种用的最多
		（1）第一种：组合doGet和doPost两个方法
		（2）第二种：写service一个方法即可不用去管是什么请求了


二、开发完servlet的配置
	<!—映射url优先级别：【正常】>【/*此网站全部】>【*.do此网站的全部.do请求】》-->
	  <servlet>
		  <servlet-name>随意</servlet-name>
		  <servlet-class>包名+类名</servlet-class>
		  <load-on-startup>
			  这个很有用：可以完成你网站的初始化	
			  这个init方法会随着你的web应用启动而调用（给他一个值=1）
			  不要给这个servlet做映射了，不要给人家调用的机会。
		  </ load-on-startup >
	  </servlet>
	  <servlet-mapping>
		  <servlet-name>随意</servlet-name>
		  <url-pattern>/你访问的url</url-pattern>
	  </servlet-mapping>

三、过滤器的使用：过滤器也是servlet，而且到下一个jsp是转发，但是记得过滤器的顺序，是按代码的顺序
	1、web.xml配置
		<filter>
			<filter-name>EncodingFilter</filter-name>
			<filter-class>com.filter.EncodingFilter</filter-class>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>utf-8</param-value>
			</init-param>
		  </filter>
		  <filter-mapping>
			<filter-name>EncodingFilter</filter-name>
			<url-pattern>/*</url-pattern>
		  </filter-mapping>
	2、过滤器类
		public class EncodingFilter extends HttpServlet implements Filter{
			private String encoding = "utf-8";
			
			@Override
			public void doFilter(ServletRequest req, ServletResponse resp,
					FilterChain arg2) throws IOException, ServletException {
				req.setCharacterEncoding(encoding);
				arg2.doFilter(req, resp);
			}

			@Override
			public void init(FilterConfig fc) throws ServletException {
				encoding = fc.getInitParameter("encoding");
				System.out.println("处理中文乱码的方法（只对post请求有效），其编码为：" + encoding);
			}
		}

四、乱码问题
	1、response.setContentType("text/html;charset=utf-8")  //告诉ie
		1.1、response.setCharacterEncoding("utf-8");这句就相当于1的后半句
	1、request.setCharacterEncoding("utf-8");  //告诉服务器，但是只管post方式提交，并且要写在去第一个参数之前，但是get方式提交的话，要用去server.xml加URIEncoding="utf-8"
	2、new String(request.getParament("un").getBytes("iso-8859-1"),"utf-8");  //重新编码，这个要注意重新编码之前的不是乱码
	3、java.net.URLEncoder.encode(un,"utf-8") 再用 java.net.URLDecoder.decode(un,"utf-8")解码
	4、用过滤器来解决中文乱码和网站安全
	
		
